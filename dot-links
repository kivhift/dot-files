#!/bin/bash
#
# Copyright (c) 2017, 2022 Joshua Hughes <kivhift@gmail.com>
#
set -eu -o pipefail

print_usage() {
    echo "
usage: ${0##*/} [-b <basedir>] [-d] [-h] [-l <link>] [-L <links>] [-r] [-v]

 -b <basedir>: create symlinks under <basedir> (default: $HOME)
 -d: diff <basedir> with dot.*
 -h: print help
 -l <link>: link <link>
 -L <links>: read files/directories to link from <links>
 -r: remove the given links
 -v: view diffs
"
}

die() {
    local usage=
    [ $# -gt 0 ] && [ "$1" = "-u" ] && usage="y" && shift
    [ $# -gt 0 ] && echo " ** $@"
    [ "$usage" ] && echo && print_usage
    exit 1
}

declare -A to_link=()
declare x opt base=$HOME remove= show_diff_status= view_diffs=
while getopts ":b:dhL:l:rv" opt; do
    case $opt in
    b)
        [ -d $OPTARG ] || die -u "$OPTARG is not an existing directory"
        base=$OPTARG
        ;;
    d)
        show_diff_status=y
        ;;
    h)
        print_usage
        exit 0
        ;;
    L)
        [ -r $OPTARG ] || die -u "Could not open $OPTARG for reading"
        declare -a line
        while read -a line; do
            for opt in ${line[*]}; do
                to_link[$opt]=1
            done
        done < $OPTARG
        ;;
    l)
        to_link[$OPTARG]=1
        ;;
    r)
        remove=y
        ;;
    v)
        view_diffs=y
        ;;
    :)
        die -u "-$OPTARG requires an argument"
        ;;
    ?)
        die -u "Invalid option given: $OPTARG"
        ;;
    esac
done

[ -d $base ] || die "$base is not an existing directory"

if [ "$show_diff_status" ]; then
    declare ans cfg
    declare -A diffs=()
    for x in $(find . -mindepth 1 -maxdepth 1 -name 'dot.*'); do
        cfg=$base/${x#'./dot'}
        [ -e $cfg ] || { echo " ? ${cfg##*/}"; continue; }
        diff -r $cfg $x > /dev/null || diffs[$cfg]=$x
    done

    for cfg in ${!diffs[*]}; do
        echo " ! ${cfg##*/}"
    done

    [ "$view_diffs" -a ${#diffs[*]} -gt 0 ] || exit 0

    for cfg in ${!diffs[*]}; do
        [ -f ${diffs[$cfg]} ] || continue
        read -p "vimdiff ${cfg##*/}?: [y]: " ans
        [ -z "$ans" -o "$ans" == "y" ] && vimdiff ${diffs[$cfg]} $cfg
    done
    exit 0
fi

[ ${#to_link[*]} -gt 0 ] || die -u "You didn't given anything to link"
for x in ${!to_link[*]}; do
    [[ $x =~ dot[.].+ ]] || die "$x does not start with 'dot.'"
    [ -r $x ] || die "Could not find $x or it's not readable"
done

declare name targ
for x in ${!to_link[*]}; do
    targ=$PWD/$x
    name=$base/${x#dot}
    [ -h $name ] && rm $name
    [ -z "$remove" ] || continue
    [ ! -e $name ] || die "$name already exists and isn't a symlink"
    ln -s -T $targ $name || die "Had trouble linking $x"
done
